"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.iterateChildrenByPath = exports.readXml = exports.readXmlInTree = void 0;
const tslib_1 = require("tslib");
const fs_1 = require("fs");
const xmldoc_1 = require("xmldoc");
function readXmlInTree(host, path) {
    var _a;
    const fileText = (_a = host.read(path)) === null || _a === void 0 ? void 0 : _a.toString();
    if (!fileText) {
        throw new Error(`Unable to read ${path}`);
    }
    return new xmldoc_1.XmlDocument(fileText);
}
exports.readXmlInTree = readXmlInTree;
function readXml(path) {
    var _a;
    const fileText = (_a = (0, fs_1.readFileSync)(path)) === null || _a === void 0 ? void 0 : _a.toString();
    if (!fileText) {
        throw new Error(`Unable to read ${path}`);
    }
    return new xmldoc_1.XmlDocument(fileText);
}
exports.readXml = readXml;
function iterateChildrenByPath(root, path, callback) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const parts = path.split('.');
        const children = root.childrenNamed(parts[0]);
        for (const childNode of children) {
            if (parts.length > 1) {
                const nextPath = parts.slice(1, parts.length).join('.');
                yield iterateChildrenByPath(childNode, nextPath, callback);
            }
            else {
                yield callback(childNode);
            }
        }
    });
}
exports.iterateChildrenByPath = iterateChildrenByPath;
//# sourceMappingURL=xml.js.map